// <auto-generated />
using System;
using DoAnCoSo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoAnCoSo.Migrations
{
    [DbContext(typeof(SeafoodDbContext))]
    [Migration("20250516130611_ngay16_5")]
    partial class ngay16_5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChiTietTrangThaiDonHang", b =>
                {
                    b.Property<int>("MaDonHang")
                        .HasColumnType("int");

                    b.Property<int>("MaTrangThai")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.HasKey("MaDonHang", "MaTrangThai");

                    b.HasIndex("MaTrangThai");

                    b.ToTable("ChiTietTrangThaiDonHangs");
                });

            modelBuilder.Entity("DoAnCoSo.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("DoAnCoSo.Models.ChiTietDonHang", b =>
                {
                    b.Property<int>("MaDonHangID")
                        .HasColumnType("int");

                    b.Property<int>("MaSanPhamID")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaDonHangID", "MaSanPhamID");

                    b.HasIndex("MaSanPhamID");

                    b.ToTable("ChiTietDonHangs");
                });

            modelBuilder.Entity("DoAnCoSo.Models.ChiTietKhoHang", b =>
                {
                    b.Property<int>("MaSanPhamID")
                        .HasColumnType("int");

                    b.Property<int>("MaNhaKhoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayNhap")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaSanPhamID", "MaNhaKhoID");

                    b.HasIndex("MaNhaKhoID");

                    b.ToTable("ChiTietKhoHangs");
                });

            modelBuilder.Entity("DoAnCoSo.Models.ChiTietMua", b =>
                {
                    b.Property<int>("MaSanPhamID")
                        .HasColumnType("int");

                    b.Property<int>("MaMuaID")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongTheoMua")
                        .HasColumnType("int");

                    b.HasKey("MaSanPhamID", "MaMuaID");

                    b.HasIndex("MaMuaID");

                    b.ToTable("ChiTietMuas");
                });

            modelBuilder.Entity("DoAnCoSo.Models.ChiTietPhieuNhap", b =>
                {
                    b.Property<int>("MaPhieuNhap")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("MaSanPham")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<decimal>("GiaNhapHang")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoLuongSanPham")
                        .HasColumnType("int");

                    b.HasKey("MaPhieuNhap", "MaSanPham");

                    b.HasIndex("MaSanPham");

                    b.ToTable("ChiTietPhieuNhaps");
                });

            modelBuilder.Entity("DoAnCoSo.Models.ChiTietVanChuyen", b =>
                {
                    b.Property<int>("MaDonHang")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("MaVanChuyen")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDonHang", "MaVanChuyen");

                    b.HasIndex("MaVanChuyen");

                    b.ToTable("ChiTietVanChuyens");
                });

            modelBuilder.Entity("DoAnCoSo.Models.DanhGia", b =>
                {
                    b.Property<int>("MaDanhGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDanhGia"));

                    b.Property<string>("BinhLuan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaNguoiDungID")
                        .HasColumnType("int");

                    b.Property<int?>("MaSanPhamID")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDanhGia")
                        .HasColumnType("datetime2");

                    b.Property<int>("XepHang")
                        .HasColumnType("int");

                    b.HasKey("MaDanhGia");

                    b.HasIndex("MaNguoiDungID");

                    b.HasIndex("MaSanPhamID");

                    b.ToTable("DanhGias");
                });

            modelBuilder.Entity("DoAnCoSo.Models.DanhMuc", b =>
                {
                    b.Property<int>("MaDanhMuc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDanhMuc"));

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDanhMuc");

                    b.ToTable("DanhMucs");
                });

            modelBuilder.Entity("DoAnCoSo.Models.DonHang", b =>
                {
                    b.Property<int>("MaDonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDonHang"));

                    b.Property<string>("DiaChiGiaoHang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaGiamGiaID")
                        .HasColumnType("int");

                    b.Property<int?>("MaNguoiDungID")
                        .HasColumnType("int");

                    b.Property<int?>("MaPTTTID")
                        .HasColumnType("int");

                    b.Property<int?>("MaTrangThaiID")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDatHang")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TongSoTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaDonHang");

                    b.HasIndex("MaGiamGiaID");

                    b.HasIndex("MaNguoiDungID");

                    b.HasIndex("MaPTTTID");

                    b.HasIndex("MaTrangThaiID");

                    b.ToTable("DonHangs");
                });

            modelBuilder.Entity("DoAnCoSo.Models.GiamGia", b =>
                {
                    b.Property<int>("MaGiamGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaGiamGia"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("GiamTheoPhanTram")
                        .HasColumnType("float");

                    b.Property<decimal?>("GiamTheoSoTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("NgayApDung")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLanDungMa")
                        .HasColumnType("int");

                    b.Property<int>("SoLanToiDaDungMa")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaGiamGia");

                    b.ToTable("GiamGias");
                });

            modelBuilder.Entity("DoAnCoSo.Models.HinhAnhSanPham", b =>
                {
                    b.Property<int>("MaHinhAnhSanPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHinhAnhSanPham"));

                    b.Property<string>("LoaiHinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaSanPhamID")
                        .HasColumnType("int");

                    b.HasKey("MaHinhAnhSanPham");

                    b.HasIndex("MaSanPhamID");

                    b.ToTable("HinhAnhSanPhams");
                });

            modelBuilder.Entity("DoAnCoSo.Models.HoaDon", b =>
                {
                    b.Property<int>("MaHoaDon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHoaDon"));

                    b.Property<int?>("MaDonHangID")
                        .HasColumnType("int");

                    b.Property<int?>("MaNguoiDungID")
                        .HasColumnType("int");

                    b.Property<int?>("MaNhanVienID")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayTaoHoaDon")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TongSoTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaHoaDon");

                    b.HasIndex("MaDonHangID");

                    b.HasIndex("MaNguoiDungID");

                    b.HasIndex("MaNhanVienID");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("DoAnCoSo.Models.LoaiSanPham", b =>
                {
                    b.Property<int>("MaLoai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoai"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLoai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLoai");

                    b.ToTable("LoaiSanPhams");
                });

            modelBuilder.Entity("DoAnCoSo.Models.Mua", b =>
                {
                    b.Property<int>("MaMua")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaMua"));

                    b.Property<string>("TenMua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianHetMua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianVaoMua")
                        .HasColumnType("datetime2");

                    b.HasKey("MaMua");

                    b.ToTable("Muas");
                });

            modelBuilder.Entity("DoAnCoSo.Models.NguoiDung", b =>
                {
                    b.Property<int>("MaNguoiDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNguoiDung"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaNguoiDung");

                    b.HasIndex("UserID");

                    b.ToTable("NguoiDungs");
                });

            modelBuilder.Entity("DoAnCoSo.Models.NhaCungCap", b =>
                {
                    b.Property<int>("MaNCC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNCC"));

                    b.Property<string>("DiaChiNCC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNCC")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaNCC");

                    b.HasIndex("UserID");

                    b.ToTable("NhaCungCaps");
                });

            modelBuilder.Entity("DoAnCoSo.Models.NhaKho", b =>
                {
                    b.Property<int>("MaNhaKho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNhaKho"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiKho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhaKho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhaKho");

                    b.ToTable("NhaKhos");
                });

            modelBuilder.Entity("DoAnCoSo.Models.NhanVien", b =>
                {
                    b.Property<int>("MaNhanVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNhanVien"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTuyenDung")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaNhanVien");

                    b.HasIndex("UserID");

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("DoAnCoSo.Models.PhieuNhapHang", b =>
                {
                    b.Property<int>("MaPhieuNhap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhieuNhap"));

                    b.Property<int?>("MaNhaCungCapID")
                        .HasColumnType("int");

                    b.Property<int>("TongSoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaPhieuNhap");

                    b.HasIndex("MaNhaCungCapID");

                    b.ToTable("PhieuNhapHangs");
                });

            modelBuilder.Entity("DoAnCoSo.Models.PhieuVanChuyen", b =>
                {
                    b.Property<int>("MaVanChuyen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaVanChuyen"));

                    b.Property<int>("MaNhanVienID")
                        .HasColumnType("int");

                    b.Property<int>("MaPhuongTienID")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayVanChuyen")
                        .HasColumnType("datetime2");

                    b.HasKey("MaVanChuyen");

                    b.HasIndex("MaNhanVienID");

                    b.HasIndex("MaPhuongTienID");

                    b.ToTable("PhieuVanChuyens");
                });

            modelBuilder.Entity("DoAnCoSo.Models.PhuongThucThanhToan", b =>
                {
                    b.Property<int>("MaPTTT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPTTT"));

                    b.Property<string>("TenPTTT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPTTT");

                    b.ToTable("PhuongThucThanhToans");

                    b.HasData(
                        new
                        {
                            MaPTTT = 1,
                            TenPTTT = "Thanh toán khi nhận hàng"
                        },
                        new
                        {
                            MaPTTT = 2,
                            TenPTTT = "PayPal"
                        });
                });

            modelBuilder.Entity("DoAnCoSo.Models.PhuongTienVanChuyen", b =>
                {
                    b.Property<int>("MaPhuongTien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhuongTien"));

                    b.Property<string>("LoaiPhuongTien")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("TrongTai")
                        .HasColumnType("float");

                    b.HasKey("MaPhuongTien");

                    b.ToTable("PhuongTienVanChuyens");
                });

            modelBuilder.Entity("DoAnCoSo.Models.SanPham", b =>
                {
                    b.Property<int>("MaSanPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaSanPham"));

                    b.Property<int?>("DanhMucID")
                        .HasColumnType("int");

                    b.Property<decimal>("GiaTheoKG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiBaoQuan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaLoaiID")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayThuHoach")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguonGoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhTrang")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaSanPham");

                    b.HasIndex("DanhMucID");

                    b.HasIndex("MaLoaiID");

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("DoAnCoSo.Models.TrangThaiDonHang", b =>
                {
                    b.Property<int>("MaTrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTrangThai"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTrangThai");

                    b.ToTable("TrangThaiDonHangs");

                    b.HasData(
                        new
                        {
                            MaTrangThai = 1,
                            GhiChu = "Đơn hàng vừa được tạo",
                            TenTrangThai = "Đã đặt hàng"
                        },
                        new
                        {
                            MaTrangThai = 2,
                            GhiChu = "Đơn hàng đã được xác nhận",
                            TenTrangThai = "Đã xác nhận"
                        },
                        new
                        {
                            MaTrangThai = 3,
                            GhiChu = "Đơn hàng đang được chuẩn bị",
                            TenTrangThai = "Đang gói hàng"
                        },
                        new
                        {
                            MaTrangThai = 5,
                            GhiChu = "Đơn hàng đang trên đường giao",
                            TenTrangThai = "Đang giao hàng"
                        },
                        new
                        {
                            MaTrangThai = 6,
                            GhiChu = "Đơn hàng đã giao thành công",
                            TenTrangThai = "Đã giao hàng"
                        },
                        new
                        {
                            MaTrangThai = 7,
                            GhiChu = "Đơn hàng bị hủy",
                            TenTrangThai = "Đã hủy"
                        });
                });

            modelBuilder.Entity("DoAnCoSo.Models.TrangThaiThanhToan", b =>
                {
                    b.Property<int>("MaTrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTrangThai"));

                    b.Property<string>("TenTrangThai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaTrangThai");

                    b.ToTable("TrangThaiThanhToans");

                    b.HasData(
                        new
                        {
                            MaTrangThai = 1,
                            TenTrangThai = "Chưa thanh toán"
                        },
                        new
                        {
                            MaTrangThai = 2,
                            TenTrangThai = "Đã thanh toán"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ChiTietTrangThaiDonHang", b =>
                {
                    b.HasOne("DoAnCoSo.Models.DonHang", "DonHang")
                        .WithMany("ChiTietTrangThaiDonHangs")
                        .HasForeignKey("MaDonHang")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DoAnCoSo.Models.TrangThaiDonHang", "TrangThaiDonHang")
                        .WithMany("ChiTietTrangThaiDonHangs")
                        .HasForeignKey("MaTrangThai")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("TrangThaiDonHang");
                });

            modelBuilder.Entity("DoAnCoSo.Models.ChiTietDonHang", b =>
                {
                    b.HasOne("DoAnCoSo.Models.DonHang", "DonHang")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("MaDonHangID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DoAnCoSo.Models.SanPham", "SanPham")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("MaSanPhamID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("DoAnCoSo.Models.ChiTietKhoHang", b =>
                {
                    b.HasOne("DoAnCoSo.Models.NhaKho", "NhaKho")
                        .WithMany("ChiTietKhoHangs")
                        .HasForeignKey("MaNhaKhoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnCoSo.Models.SanPham", "SanPham")
                        .WithMany("ChiTietKhoHangs")
                        .HasForeignKey("MaSanPhamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhaKho");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("DoAnCoSo.Models.ChiTietMua", b =>
                {
                    b.HasOne("DoAnCoSo.Models.Mua", "Mua")
                        .WithMany("ChiTietMuas")
                        .HasForeignKey("MaMuaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnCoSo.Models.SanPham", "SanPham")
                        .WithMany("ChiTietMuas")
                        .HasForeignKey("MaSanPhamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mua");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("DoAnCoSo.Models.ChiTietPhieuNhap", b =>
                {
                    b.HasOne("DoAnCoSo.Models.PhieuNhapHang", "PhieuNhapHang")
                        .WithMany("ChiTietPhieuNhaps")
                        .HasForeignKey("MaPhieuNhap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnCoSo.Models.SanPham", "SanPham")
                        .WithMany("ChiTietPhieuNhaps")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhieuNhapHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("DoAnCoSo.Models.ChiTietVanChuyen", b =>
                {
                    b.HasOne("DoAnCoSo.Models.DonHang", "DonHang")
                        .WithMany("ChiTietVanChuyens")
                        .HasForeignKey("MaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnCoSo.Models.PhieuVanChuyen", "PhieuVanChuyen")
                        .WithMany("ChiTietVanChuyens")
                        .HasForeignKey("MaVanChuyen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("PhieuVanChuyen");
                });

            modelBuilder.Entity("DoAnCoSo.Models.DanhGia", b =>
                {
                    b.HasOne("DoAnCoSo.Models.NguoiDung", "NguoiDung")
                        .WithMany("DanhGias")
                        .HasForeignKey("MaNguoiDungID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DoAnCoSo.Models.SanPham", "SanPham")
                        .WithMany("DanhGias")
                        .HasForeignKey("MaSanPhamID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("NguoiDung");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("DoAnCoSo.Models.DonHang", b =>
                {
                    b.HasOne("DoAnCoSo.Models.GiamGia", "GiamGia")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaGiamGiaID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DoAnCoSo.Models.NguoiDung", "NguoiDung")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaNguoiDungID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DoAnCoSo.Models.PhuongThucThanhToan", "PhuongThucThanhToan")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaPTTTID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DoAnCoSo.Models.TrangThaiThanhToan", "TrangThaiThanhToan")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaTrangThaiID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("GiamGia");

                    b.Navigation("NguoiDung");

                    b.Navigation("PhuongThucThanhToan");

                    b.Navigation("TrangThaiThanhToan");
                });

            modelBuilder.Entity("DoAnCoSo.Models.HinhAnhSanPham", b =>
                {
                    b.HasOne("DoAnCoSo.Models.SanPham", "SanPham")
                        .WithMany("HinhAnhSanPhams")
                        .HasForeignKey("MaSanPhamID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("DoAnCoSo.Models.HoaDon", b =>
                {
                    b.HasOne("DoAnCoSo.Models.DonHang", "DonHang")
                        .WithMany()
                        .HasForeignKey("MaDonHangID");

                    b.HasOne("DoAnCoSo.Models.NguoiDung", "NguoiDung")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaNguoiDungID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DoAnCoSo.Models.NhanVien", "NhanVien")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaNhanVienID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DonHang");

                    b.Navigation("NguoiDung");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("DoAnCoSo.Models.NguoiDung", b =>
                {
                    b.HasOne("DoAnCoSo.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DoAnCoSo.Models.NhaCungCap", b =>
                {
                    b.HasOne("DoAnCoSo.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DoAnCoSo.Models.NhanVien", b =>
                {
                    b.HasOne("DoAnCoSo.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DoAnCoSo.Models.PhieuNhapHang", b =>
                {
                    b.HasOne("DoAnCoSo.Models.NhaCungCap", "NhaCungCap")
                        .WithMany("PhieuNhapHangs")
                        .HasForeignKey("MaNhaCungCapID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("NhaCungCap");
                });

            modelBuilder.Entity("DoAnCoSo.Models.PhieuVanChuyen", b =>
                {
                    b.HasOne("DoAnCoSo.Models.NhanVien", "NhanVien")
                        .WithMany("PhieuVanChuyens")
                        .HasForeignKey("MaNhanVienID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DoAnCoSo.Models.PhuongTienVanChuyen", "PhuongTienVanChuyen")
                        .WithMany("PhieuVanChuyens")
                        .HasForeignKey("MaPhuongTienID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NhanVien");

                    b.Navigation("PhuongTienVanChuyen");
                });

            modelBuilder.Entity("DoAnCoSo.Models.SanPham", b =>
                {
                    b.HasOne("DoAnCoSo.Models.DanhMuc", "DanhMuc")
                        .WithMany("SanPhams")
                        .HasForeignKey("DanhMucID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DoAnCoSo.Models.LoaiSanPham", "LoaiSanPham")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaLoaiID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DanhMuc");

                    b.Navigation("LoaiSanPham");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DoAnCoSo.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("DoAnCoSo.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnCoSo.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DoAnCoSo.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DoAnCoSo.Models.DanhMuc", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("DoAnCoSo.Models.DonHang", b =>
                {
                    b.Navigation("ChiTietDonHangs");

                    b.Navigation("ChiTietTrangThaiDonHangs");

                    b.Navigation("ChiTietVanChuyens");
                });

            modelBuilder.Entity("DoAnCoSo.Models.GiamGia", b =>
                {
                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("DoAnCoSo.Models.LoaiSanPham", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("DoAnCoSo.Models.Mua", b =>
                {
                    b.Navigation("ChiTietMuas");
                });

            modelBuilder.Entity("DoAnCoSo.Models.NguoiDung", b =>
                {
                    b.Navigation("DanhGias");

                    b.Navigation("DonHangs");

                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("DoAnCoSo.Models.NhaCungCap", b =>
                {
                    b.Navigation("PhieuNhapHangs");
                });

            modelBuilder.Entity("DoAnCoSo.Models.NhaKho", b =>
                {
                    b.Navigation("ChiTietKhoHangs");
                });

            modelBuilder.Entity("DoAnCoSo.Models.NhanVien", b =>
                {
                    b.Navigation("HoaDons");

                    b.Navigation("PhieuVanChuyens");
                });

            modelBuilder.Entity("DoAnCoSo.Models.PhieuNhapHang", b =>
                {
                    b.Navigation("ChiTietPhieuNhaps");
                });

            modelBuilder.Entity("DoAnCoSo.Models.PhieuVanChuyen", b =>
                {
                    b.Navigation("ChiTietVanChuyens");
                });

            modelBuilder.Entity("DoAnCoSo.Models.PhuongThucThanhToan", b =>
                {
                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("DoAnCoSo.Models.PhuongTienVanChuyen", b =>
                {
                    b.Navigation("PhieuVanChuyens");
                });

            modelBuilder.Entity("DoAnCoSo.Models.SanPham", b =>
                {
                    b.Navigation("ChiTietDonHangs");

                    b.Navigation("ChiTietKhoHangs");

                    b.Navigation("ChiTietMuas");

                    b.Navigation("ChiTietPhieuNhaps");

                    b.Navigation("DanhGias");

                    b.Navigation("HinhAnhSanPhams");
                });

            modelBuilder.Entity("DoAnCoSo.Models.TrangThaiDonHang", b =>
                {
                    b.Navigation("ChiTietTrangThaiDonHangs");
                });

            modelBuilder.Entity("DoAnCoSo.Models.TrangThaiThanhToan", b =>
                {
                    b.Navigation("DonHangs");
                });
#pragma warning restore 612, 618
        }
    }
}
